q5Data <-mergedData[order(mergedData$Rank, decreasing=FALSE),]
subset(q5Data,distinct Income.Group)
subset(q5Data$Income.Group)
subset(q5Data,Income.Group == "Lower middle income")
subset(q5Data,Income.Group == "Lower middle income" & Rank < 39)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "acsId.csv")
acsId <- read.csv("acsId.csv", header=TRUE)
splitData <- strsplit(names(acsId,"wgpt")
)
splitData = strsplit(names(acsId,"wgpt"))
splitData <- strsplit(names(acsId),"wgpt")
splitData[[123]]
head(acsId)
head(splitData)
?strsplit
names <- colnames(acsId)
splitData <- strsplit(names(acsId),"wgpt")
head(splitData)
tail(splitData)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", destfile = "acsId.csv")
acsId <- read.csv("acsId.csv", header=TRUE)
splitData <- strsplit(names(acsId),"wgtp")
splitData[[123]]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", destfile="gdp.csv")
gdp <- read.csv("gdp.csv", skip = 5, header=FALSE, nrows=190,stringsAsFactors=F)
##Clean up GDP
tidyGDP <- subset(gdp[,c(1:2,4:5)])
colnames(tidyGDP) <- c("CountryCode","Rank","Name","GDP")
tidyGDP$GDP <- gsub(",","",tidyGDP$GDP)
tidyGDP$GDP <- as.numeric(tidyGDP$GDP)
mean(tidyGDP$GDP)
grep("^United",tidyGDP$CountryCode)
grep("^United",tidyGDP$Name)
nrow(grep("^United",tidyGDP$Name))
count(grep("^United",tidyGDP$Name))
length(grep("^United",tidyGDP$Name))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", destfile="ed.csv")
ed <- read.csv("ed.csv",stringsAsFactors=F)
colnames(ed)
subset(ed[,11])
ed[,11]
colnames(ed)
head(ed,n=1)
head(ed,n=5)
colnames(ed)
ed$Special.Notes
colnames(ed)
tidyEd <- subset(ed[,1:10])
head(tidyEd)
mergedData <- join(tidyGDP,tidyEd, type="inner")
length(grep("Fiscal year end: June",ed$Special.Notes))
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
library(plyr)
mergedData <- join(tidyGDP,tidyEd, type="inner")
length(grep("Fiscal year end: June",ed$Special.Notes))
install.packages(quantmod)
install.package(quantmod)
install.packages("quantmod"")
-
)
""
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampletimes)
head(sampleTimes)
str(sampleTimes)
class(sampleTimes)
dim(sampleTimes)
summary(sampleTimes)
length(grep("^2012",sampleTimes))
format(sampleTimes,"%Y")
format(sampleTimes,"%Y") > 2011
format(sampleTimes,"%Y") == 2012
length(format(sampleTimes,"%Y") == 2012)
format(sampleTimes,"%Y") > 2011
length(grep("^2012",sampleTimes))
2012 <- grep("^2012",sampleTimes)
year <- grep("^2012",sampleTimes)
head(year)
grep("^2012",sampleTimes)
weekdays(sampleTimes)
weekdays(sampleTimes) == Monday
weekdays(sampleTimes) == "Monday""
""
weekdays(sampleTimes) == "Monday"
weekdays(sampleTimes) == "Monday" & year(sampleTimes) == "2012"
?weekdays
?years
weekdays(sampleTimes) == "Monday" & grep("^2012",sampleTimes)
length(weekdays(sampleTimes) == "Monday" & grep("^2012",sampleTimes))
grep("^2012",sampleTimes)
sampleTimes[grep("^2012",sampleTimes),]
?format
weekdays(sampleTimes) == "Monday"
grep("^2012",sampleTimes)
subset(sampleTimes, grep("^2012"))
subset(sampleTimes, grep("^2012",sampleTimes))
sampleTimes
class(sampleTimes)
Weekdays(sampleTimes)
weekdays(sampleTimes)
length(weekdays(sampleTimes))
length(weekdays(sampleTimes) == 'Monday')
length(weekdays(sampleTimes) == "Monday")
weekdays(sampleTimes) == "Monday"
sum(weekdays(sampleTimes) == "Monday")
length(grep("^2012",sampleTimes))
format(sampleTimes,"%a %b %d")
format(sampleTimes,"%a %b %Y")
format(sampleTimes,"%Y%a")
grep("2012Mon",format(sampleTimes,"%Y%a"))
length(grep("2012Mon",format(sampleTimes,"%Y%a")))
length(grep("2012",format(sampleTimes,"%Y")))
length(grep("2012Mon",format(sampleTimes,"%Y%a")))
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip")
download.file("https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2Fhousehold_power_consumption.zip", destfile = "householdPower")
?unzip
unzip("householdPower")
list.files()
?list.files
read.table("household_power_consumption.txt")
?read.table
FullPower <-read.table("household_power_consumption.txt")
head(FullPower)
FullPower <-read.table("household_power_consumption.txt", header = TRUE)
FullPower <-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
head(FullPower)
colnames(FullPower,c("Date","Time","Active","Reactive","Voltage","Intensity","SubMeter1","SubMeter2","SubMeter3"))
head(FullPower)
colnames(FullPower) <- c("Date","Time","Active","Reactive","Voltage","Intensity","SubMeter1","SubMeter2","SubMeter3"))
colnames(FullPower) <- c("Date","Time","Active","Reactive","Voltage","Intensity","SubMeter1","SubMeter2","SubMeter3")
head(FullPower)
?subset
class(FullPower)
summary(FullPower)
str(FullPower)
Date <- as.Date(FullPower, format="%d/%m/%Y")
Date <- as.Date(FullPower$Date, format="%d/%m/%Y")
Power <- subset(FullPower, Date>2007-01-31 & Date<2007-02-03)
as.Date(FullPower$Date, format="%d/%m/%Y")
Date <- as.Date(FullPower$Date, format="%d/%m/%Y")
str(FullPower)
FullPower <- as.Date(FullPower$Date, format="%d/%m/%Y")
str(FullPower)
FullPower <-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
colnames(FullPower) <- c("Date","Time","Active","Reactive","Voltage","Intensity","SubMeter1","SubMeter2","SubMeter3")
as.Date(FullPower$Date, format="%d/%m/%Y")
str(FullPower)
?strtime
?strptime
as.Date(FullPower$Date, format="%d?%m?%Y")
as.Date(FullPower$Date, format="%d/%m/%Y")
?subset
Power <- subset(FullPower, as.Date(FullPower$Date, format="%d/%m/%Y")>2007-01-31 & as.Date(FullPower$Date, format="%d/%m/%Y")<2007-02-03)
str(Power)
str(FullPower)
?as.date
?as.date()
install.package(date)
install.packages(date)
library(date)
?as.Date()
as.Date(FullPower$Date, format="%d/%m/%Y")
FullPower$Date <- as.Date(FullPower$Date, format="%d/%m/%Y")
str(FullPower)
Power <- subset(FullPower, Date>2007-01-31 & Date<2007-02-03)
str(Power)
Power <- subset(FullPower, Date>2007-01-31)
str(Power)
?subset
Power <- subset(FullPower, Date==2007-01-31)
?subset
str(Power)
Power <- subset(FullPower, as.Date(Date)>2007-01-31 & as.Date(Date)<2007-02-03)
str(Power)
FullPower$Date <- as.Date(as.character(FullPower$Date), format="%d/%m/%Y")
str(FullPower)
FullPower <-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
colnames(FullPower) <- c("Date","Time","Active","Reactive","Voltage","Intensity","SubMeter1","SubMeter2","SubMeter3")
FullPower$Date <- as.Date(FullPower$Date, format="%d/%m/%Y")
str(FullPower)
Power <- subset(FullPower, Date == "2007-02-01" | Date == "2007-02-02")
str(Power)
head(Power)
?strptime
Power$datetime <- paste(Power$Date, Power$Time)
str(Power)
strptime(Power$datetime, "%Y-%m-%d %H:%M:%S")
str(Power)
Power$datetime <- strptime(Power$datetime, "%Y-%m-%d %H:%M:%S")
str(Power)
?date
hist(Power)
hist(Power$Active)
hist(as.numeric(Power$Active))
?hist
hist(as.numeric(Power$Active), breaks = 12)
hist(as.numeric(Power$Active), breaks = 12, col="red", ylab="Global Active Power (kilowatts")
hist(as.numeric(Power$Active), breaks = 12, col="red", xlab="Global Active Power (kilowatts")
head(Power)
head(as.numeric(Active))
head(as.numeric(Power$Active))
head(as.numeric(as.character(Power$Active)))
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", xlab="Global Active Power (kilowatts")
?hist
?par
?axis
?xaxp
?plot
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", y="n", xlab="Global Active Power (kilowatts)")
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", xaxt="n", xlab="Global Active Power (kilowatts)")
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", yaxt="n", xlab="Global Active Power (kilowatts)")
axis(1, at = seq(10, 200, by = 10), las=2)
axis(1, at = seq(0, 1200, by = 200), las=2)
?axis
axis(2, at = seq(0, 1200, by = 200), las=2)
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", yaxt="n", xlab="Global Active Power (kilowatts)")
axis(2, at = seq(0, 1200, by = 200), las=2)
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", yaxt="n", xlab="Global Active Power (kilowatts)", main="Global Active Power")
?dev.copy()
?
?
png
?png
png(filename="plot1.png", width=480, height=480)
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", yaxt="n", xlab="Global Active Power (kilowatts)", main="Global Active Power")
axis(2, at = seq(0, 1200, by = 200), las=2)
dev.off()
##Read data & set tidy column names
FullPower <-read.table("household_power_consumption.txt", header = TRUE, sep = ";")
colnames(FullPower) <- c("Date","Time","Active","Reactive","Voltage","Intensity","SubMeter1","SubMeter2","SubMeter3")
##Subset data by date, merge date and time
FullPower$Date <- as.Date(FullPower$Date, format="%d/%m/%Y")
Power <- subset(FullPower, Date == "2007-02-01" | Date == "2007-02-02")
Power$datetime <- paste(Power$Date, Power$Time)
Power$datetime <- strptime(Power$datetime, "%Y-%m-%d %H:%M:%S")
##Open graphic device and plot data
png(filename="plot1.png", width=480, height=480)
hist(as.numeric(as.character(Power$Active)), breaks = 12, col="red", yaxt="n", xlab="Global Active Power (kilowatts)", main="Global Active Power")
axis(2, at = seq(0, 1200, by = 200), las=2)
dev.off()
?with
with(Power, plot(Active, Date))
with(Power, plot(Date, Active))
with(Power, plot(datetime, Active))
with(Power, plot(datetime, Active))
?abline
abline(Power)
plot2 <- with(Power, plot(datetime, Active))
abline(plot2)
abline(plot2, lwd=3)
with(Power, plot(datetime, Active))
plot2 <- lm(y ~ x)
abline(plot2)
?lm
plot2 <- lm(datetime ~ Active)
abline(datetime,Active)
plot2 <- with(Power, plot(datetime, Active))
abline(plot2)
plot2
plot2 <- with(Power, plot(datetime, Active))
lines(plot2)
?lines
lines(datetime,Active)
lines(Power$datetime,Power$Active)
plot2 <- with(Power, plot(datetime, Active, pch=27))
?pch
plot(Power$datetime, Power$Active)
?plot
plot(Power$datetime, Power$Active, type="l")
plot(Power$datetime, Power$Active, type="l", ylab="", xlab="Global Active Power (kilowatts)")
plot(Power$datetime, Power$Active, type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Power$datetime, as.number(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power (kilowatts)")
png(filename="plot2.png", width=480, height=480)
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
plot(Power$datetime, as.numeric(as.character(Power$SubMeter1)), type="l", xlab="", ylab="Global Active Power (kilowatts)")
plot(Power$datetime, as.numeric(as.character(Power$SubMeter2)), type="l", xlab="", ylab="", col="red")
plot(Power$datetime, as.numeric(as.character(Power$SubMeter3)), type="l", xlab="", ylab="", col="blue")
with(Power, plot(datetime, as.numeric(as.character(SubMeter1))) ##doesn’t actually plot
)
with(Power, plot(datetime, as.numeric(as.character(SubMeter1)),type="1")
with(Power, plot(datetime, as.numeric(as.character(SubMeter1)),type="1"),)
with(Power, plot(datetime, as.numeric(as.character(SubMeter1)),type="1"))
with(Power, plot(datetime, as.numeric(as.character(SubMeter1)),type="l"))
with(Power, plot(datetime, as.numeric(as.character(SubMeter1)),type="l"))
with(Power, plot(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red"))
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy Sub Metering")
plot(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
plot(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy Sub Metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend(“topright”, pch = 1, col = c("black",“red”,”blue”), legend = c(“Sub_metering_1”, “Sub_metering_2”,"Sub_metering_3"))
?legend
legend(“topright”, col = c("black",“red”,”blue”), legend = c(“Sub_metering_1”, “Sub_metering_2”,"Sub_metering_3"))
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2”,"Sub_metering_3"))
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2”,"Sub_metering_3"))
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
legend("topright", pch = 1, col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"))
legend("topright", pch = 1, col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1, lty=c(1,2,3))
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1, lty=c(1,2,3))
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
png(filename="plot2.png", width=480, height=480)
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering", legend=)
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
dev.off()
png(filename="plot3.png", width=480, height=480)
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering", legend=)
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
dev.off()
png(filename="plot3.png", width=480, height=480)
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
dev.off()
png(filename="plot2.png", width=480, height=480)
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power (kilowatts)")
dev.off()
mfcol=c(2,2)
##1st plot
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power")
##2nd plot
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
##3rd plot
par(mfcol=c(2,2))
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power")
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
##3rd plot
##4th plot
plot(Power$datetime, as.numeric(as.character(Power$Voltage)), type="l", xlab="", ylab="Voltage")
##1st plot
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power")
##2nd plot
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
##3rd plot
plot(Power$datetime, as.numeric(as.character(Power$Voltage)), type="l", xlab="datetime", ylab="Voltage")
##4th plot
plot(Power$datetime, as.numeric(as.character(Power$Reactive)), type="l", xlab="datetime", ylab="Global_reactive_power")
par(mfcol=c(2,2))
##1st plot
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power")
##2nd plot
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
##3rd plot
plot(Power$datetime, as.numeric(as.character(Power$Voltage)), type="l", xlab="datetime", ylab="Voltage")
##4th plot
plot(Power$datetime, as.numeric(as.character(Power$Reactive)), type="l", xlab="datetime", ylab="Global_reactive_power")
png(filename="plot4.png", width=480, height=480)
##create structure for plots
par(mfcol=c(2,2))
##1st plot
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power")
##2nd plot
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright", col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
##3rd plot
plot(Power$datetime, as.numeric(as.character(Power$Voltage)), type="l", xlab="datetime", ylab="Voltage")
##4th plot
plot(Power$datetime, as.numeric(as.character(Power$Reactive)), type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
legend("topright",bty = "n",col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
png(filename="plot4.png", width=480, height=480)
##create structure for plots
par(mfcol=c(2,2))
##1st plot
plot(Power$datetime, as.numeric(as.character(Power$Active)), type="l", xlab="", ylab="Global Active Power")
##2nd plot
with(Power, {
plot(datetime, as.numeric(as.character(SubMeter1)),type="l", xlab="", ylab="Energy sub metering")
lines(datetime, as.numeric(as.character(SubMeter2)),type="l", col="red")
lines(datetime, as.numeric(as.character(SubMeter3)),type="l", col="blue")
})
legend("topright",bty = "n",col = c("black","red","blue"), legend = c("Sub_metering_1", "Sub_metering_2","Sub_metering_3"), lwd=1)
##3rd plot
plot(Power$datetime, as.numeric(as.character(Power$Voltage)), type="l", xlab="datetime", ylab="Voltage")
##4th plot
plot(Power$datetime, as.numeric(as.character(Power$Reactive)), type="l", xlab="datetime", ylab="Global_reactive_power")
dev.off()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?lattice
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
library(ggplot2)
install.packages("ggplot2")
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = .~factor(Month))
airquality = transform(airquality, Mont = factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
fullData <- read.csv("activity.csv", stringsAsFactors=F)
install.packages("date")
library(date)
fullData$date <- as.Date(fullData$date, format = "%Y-%m-%d")
getwd()
ls
list.file()
getwd()
list.files()
setwd("C:/Users/hhessel/Documents/RepData_PeerAssessment1")
fullData <- read.csv("activity.csv", stringsAsFactors=F)
fullData$date <- as.Date(fullData$date, format = "%Y-%m-%d")
stepsByDate <- by(fullData$steps, fullData$date, sum)
hist(stepsByDate, xlab="Steps", main="Total Steps by Day", xlim=c(0,25000), breaks=8)
myMean <- mean(stepsByDate, na.rm=TRUE)
myMedian <- median(stepsByDate, na.rm=TRUE)
stepsByInterval <- aggregate(steps~interval, data=fullData, mean, na.rm=TRUE)
plot(stepsByInterval$steps~stepsByInterval$interval, type="l", ylab="Daily Average Steps", xlab="Interval")
mostSteps <- stepsByInterval$interval[which.max(stepsByInterval$steps)]
totalNA <- sum(is.na(fullData$steps)
imputedDF <- fullData
mySteps <- mean(stepsByInterval$steps)
imputedDF$steps[is.na(imputedDF$steps)] <- mySteps
imputedStepsByDate <- by(imputedDF$steps, imputedDF$date, sum)
hist(imputedStepsByDate, xlab="Steps", main="Total Steps by Day (Imputed)", xlim=c(0,25000), breaks=8)
totalNA <- sum(is.na(fullData$steps)
totalNA <- sum(is.na(fullData$steps))
?is.na
sum(is.na(fullData$steps))
totalNon <- sum(is.na(fullData$steps))
imputedDF <- fullData
mySteps <- mean(stepsByInterval$steps)
imputedDF$steps[is.na(imputedDF$steps)] <- mySteps
imputedStepsByDate <- by(imputedDF$steps, imputedDF$date, sum)
hist(imputedStepsByDate, xlab="Steps", main="Total Steps by Day (Imputed)", xlim=c(0,25000), breaks=8)
imputedMean <- mean(imputedStepsByDate, na.rm=TRUE)
imputedMedian <- median(imputedStepsByDate, na.rm=TRUE)
The mean total number of steps per day is `r imputedMean`
The median number of steps per day is `r imputedMedian`
The values of the original and imputed data do not differ much. There is not much impact.
fullData$dayName = weekdays(fullData$date)
fullData$dayType <- if(fullData$dayName %in% c("Saturday","Sunday")) {"weekend"} else {"weekday"}
fullData$dayName = weekdays(fullData$date)
fullData$dayType <- if(fullData$dayName %in% c("Saturday","Sunday")) {"weekend"} else {"weekday"}
fullData$dayName <- weekdays(fullData$date)
fullData$dayType <- if(fullData$dayName %in% c("Saturday","Sunday")) {"weekend"} else {"weekday"}
?if
?ifelse
?ifels
fullData$dayName <- weekdays(fullData$date)
if(fullData$dayName %in% c("Saturday","Sunday"))
{fullData$dayType <- "weekend"}
else {fullData$dayType <- "weekday"}
if(fullData$dayName == c("Saturday","Sunday"))
{fullData$dayType <- "weekend"}
?ifelse
if(fullData$dayName == "Saturday" | fullData$dayName == "Sunday"))
{fullData$dayType <- "weekend"}
if(fullData$dayName == "Saturday" | fullData$dayName == "Sunday")
{fullData$dayType <- "weekend"}
?runif
fullData$dayType <- ifelse(fullData$dayName %in% c("Saturday","Sunday"),"weekend","weekend")
count(fullData$dayName == "weekend")
sum(fullData$dayName == "weekend")
sum(fullData$dayName == "weekday")
sum(fullData$dayName == "Saturday")
count(fullData$dayType == "weekend")
sum(fullData$dayType == "weekend")
sum(fullData$dayName == "Sunday")
sum(fullData$dayType == "weekday")
head(fullData$dayName)
fullData$dayType <- ifelse(fullData$dayName %in% c("Saturday","Sunday"),"weekend","weekday")
sum(fullData$dayType == "weekday")
sum(fullData$dayType == "weekend")
sum(!is.na(fullData$dayName))
